{"ast":null,"code":"import UserInput from\"../Hooks/user-input\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BasicForm=function BasicForm(props){var _UserInput=UserInput(function(value){return value.trim()!==\"\";}),enteredFirstName=_UserInput.value,firstNameInputHaserror=_UserInput.hasError,enteredFirstNameIsValid=_UserInput.isValid,firstNameChangeHandler=_UserInput.valueChangeHandler,firstNameBlurHandler=_UserInput.valueBlurHandler,resetFirstNameInput=_UserInput.reset;var _UserInput2=UserInput(function(value){return value.trim()!==\"\";}),enteredLastName=_UserInput2.value,lastNameInputHaserror=_UserInput2.hasError,enteredLastNameIsValid=_UserInput2.isValid,lastNameChangeHandler=_UserInput2.valueChangeHandler,lastNameBlurHandler=_UserInput2.valueBlurHandler,resetLastNameInput=_UserInput2.reset;var _UserInput3=UserInput(function(value){return value.includes(\"@\");}),enteredEmail=_UserInput3.value,emailInputHaserror=_UserInput3.hasError,enteredEmailIsValid=_UserInput3.isValid,emailChangeHandler=_UserInput3.valueChangeHandler,emailBlurHandler=_UserInput3.valueBlurHandler,resetEmailInput=_UserInput3.reset;var formIsValid=false;if(enteredFirstNameIsValid&&enteredLastNameIsValid&&enteredEmailIsValid){formIsValid=true;}var formSubmissionHandler=function formSubmissionHandler(event){event.preventDefault();resetFirstNameInput();resetLastNameInput();resetEmailInput();};var firstNameInputClasses=firstNameInputHaserror?\"form-control invalid\":\"form-control\";var lastNameInputClasses=lastNameInputHaserror?\"form-control invalid\":\"form-control\";var emailInputClasses=emailInputHaserror?\"form-control invalid\":\"form-control\";return/*#__PURE__*/_jsxs(\"form\",{onSubmit:formSubmissionHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"control-group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:firstNameInputClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"First Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",onChange:firstNameChangeHandler,onBlur:firstNameBlurHandler,value:enteredFirstName}),firstNameInputHaserror&&/*#__PURE__*/_jsx(\"p\",{className:\"error-text\",children:\"First name must not be empty.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:lastNameInputClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Last Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",onChange:lastNameChangeHandler,onBlur:lastNameBlurHandler,value:enteredLastName}),lastNameInputHaserror&&/*#__PURE__*/_jsx(\"p\",{className:\"error-text\",children:\"Last name must not be empty.\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:emailInputClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"E-Mail Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"name\",onChange:emailChangeHandler,onBlur:emailBlurHandler,value:enteredEmail}),emailInputHaserror&&/*#__PURE__*/_jsx(\"p\",{className:\"error-text\",children:\"Please enter valid Email Id.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!formIsValid,children:\"Submit\"})})]});};export default BasicForm;","map":{"version":3,"sources":["D:/Data - Kanchan/Github-applications/reactFormGit/src/components/BasicForm.js"],"names":["UserInput","BasicForm","props","value","trim","enteredFirstName","firstNameInputHaserror","hasError","enteredFirstNameIsValid","isValid","firstNameChangeHandler","valueChangeHandler","firstNameBlurHandler","valueBlurHandler","resetFirstNameInput","reset","enteredLastName","lastNameInputHaserror","enteredLastNameIsValid","lastNameChangeHandler","lastNameBlurHandler","resetLastNameInput","includes","enteredEmail","emailInputHaserror","enteredEmailIsValid","emailChangeHandler","emailBlurHandler","resetEmailInput","formIsValid","formSubmissionHandler","event","preventDefault","firstNameInputClasses","lastNameInputClasses","emailInputClasses"],"mappings":"AAAA,MAAOA,CAAAA,SAAP,KAAsB,qBAAtB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,eAOIF,SAAS,CAAC,SAACG,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,KAAiB,EAA5B,EAAD,CAPb,CACSC,gBADT,YACEF,KADF,CAEYG,sBAFZ,YAEEC,QAFF,CAGWC,uBAHX,YAGEC,OAHF,CAIsBC,sBAJtB,YAIEC,kBAJF,CAKoBC,oBALpB,YAKEC,gBALF,CAMSC,mBANT,YAMEC,KANF,CASA,gBAOIf,SAAS,CAAC,SAACG,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,KAAiB,EAA5B,EAAD,CAPb,CACSY,eADT,aACEb,KADF,CAEYc,qBAFZ,aAEEV,QAFF,CAGWW,sBAHX,aAGET,OAHF,CAIsBU,qBAJtB,aAIER,kBAJF,CAKoBS,mBALpB,aAKEP,gBALF,CAMSQ,kBANT,aAMEN,KANF,CASA,gBAOIf,SAAS,CAAC,SAACG,KAAD,QAAWA,CAAAA,KAAK,CAACmB,QAAN,CAAe,GAAf,CAAX,EAAD,CAPb,CACSC,YADT,aACEpB,KADF,CAEYqB,kBAFZ,aAEEjB,QAFF,CAGWkB,mBAHX,aAGEhB,OAHF,CAIsBiB,kBAJtB,aAIEf,kBAJF,CAKoBgB,gBALpB,aAKEd,gBALF,CAMSe,eANT,aAMEb,KANF,CASA,GAAIc,CAAAA,WAAW,CAAG,KAAlB,CAEA,GACErB,uBAAuB,EACvBU,sBADA,EAEAO,mBAHF,CAIE,CACAI,WAAW,CAAG,IAAd,CACD,CAED,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,KAAD,CAAW,CACvCA,KAAK,CAACC,cAAN,GAEAlB,mBAAmB,GACnBO,kBAAkB,GAClBO,eAAe,GAChB,CAND,CAQA,GAAMK,CAAAA,qBAAqB,CAAG3B,sBAAsB,CAChD,sBADgD,CAEhD,cAFJ,CAIA,GAAM4B,CAAAA,oBAAoB,CAAGjB,qBAAqB,CAC9C,sBAD8C,CAE9C,cAFJ,CAIA,GAAMkB,CAAAA,iBAAiB,CAAGX,kBAAkB,CACxC,sBADwC,CAExC,cAFJ,CAIA,mBACE,cAAM,QAAQ,CAAEM,qBAAhB,wBACE,aAAK,SAAS,CAAC,eAAf,wBACE,aAAK,SAAS,CAAEG,qBAAhB,wBACE,cAAO,OAAO,CAAC,MAAf,wBADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,MAFL,CAGE,QAAQ,CAAEvB,sBAHZ,CAIE,MAAM,CAAEE,oBAJV,CAKE,KAAK,CAAEP,gBALT,EAFF,CASGC,sBAAsB,eACrB,UAAG,SAAS,CAAC,YAAb,2CAVJ,GADF,cAcE,aAAK,SAAS,CAAE4B,oBAAhB,wBACE,cAAO,OAAO,CAAC,MAAf,uBADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,MAFL,CAGE,QAAQ,CAAEf,qBAHZ,CAIE,MAAM,CAAEC,mBAJV,CAKE,KAAK,CAAEJ,eALT,EAFF,CASGC,qBAAqB,eACpB,UAAG,SAAS,CAAC,YAAb,0CAVJ,GAdF,GADF,cA6BE,aAAK,SAAS,CAAEkB,iBAAhB,wBACE,cAAO,OAAO,CAAC,MAAf,4BADF,cAEE,cACE,IAAI,CAAC,OADP,CAEE,EAAE,CAAC,MAFL,CAGE,QAAQ,CAAET,kBAHZ,CAIE,MAAM,CAAEC,gBAJV,CAKE,KAAK,CAAEJ,YALT,EAFF,CASGC,kBAAkB,eACjB,UAAG,SAAS,CAAC,YAAb,0CAVJ,GA7BF,cA0CE,YAAK,SAAS,CAAC,cAAf,uBACE,eAAQ,IAAI,CAAC,QAAb,CAAsB,QAAQ,CAAE,CAACK,WAAjC,oBADF,EA1CF,GADF,CAkDD,CA5GD,CA8GA,cAAe5B,CAAAA,SAAf","sourcesContent":["import UserInput from \"../Hooks/user-input\";\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredFirstName,\n    hasError: firstNameInputHaserror,\n    isValid: enteredFirstNameIsValid,\n    valueChangeHandler: firstNameChangeHandler,\n    valueBlurHandler: firstNameBlurHandler,\n    reset: resetFirstNameInput,\n  } = UserInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredLastName,\n    hasError: lastNameInputHaserror,\n    isValid: enteredLastNameIsValid,\n    valueChangeHandler: lastNameChangeHandler,\n    valueBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput,\n  } = UserInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredEmail,\n    hasError: emailInputHaserror,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = UserInput((value) => value.includes(\"@\"));\n\n  let formIsValid = false;\n\n  if (\n    enteredFirstNameIsValid &&\n    enteredLastNameIsValid &&\n    enteredEmailIsValid\n  ) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    resetFirstNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  };\n\n  const firstNameInputClasses = firstNameInputHaserror\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const lastNameInputClasses = lastNameInputHaserror\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailInputHaserror\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameInputClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n            value={enteredFirstName}\n          />\n          {firstNameInputHaserror && (\n            <p className=\"error-text\">First name must not be empty.</p>\n          )}\n        </div>\n        <div className={lastNameInputClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n            value={enteredLastName}\n          />\n          {lastNameInputHaserror && (\n            <p className=\"error-text\">Last name must not be empty.</p>\n          )}\n        </div>\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"email\"\n          id=\"name\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHaserror && (\n          <p className=\"error-text\">Please enter valid Email Id.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button type=\"submit\" disabled={!formIsValid}>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}