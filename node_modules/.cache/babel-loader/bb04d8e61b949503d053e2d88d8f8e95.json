{"ast":null,"code":"var _jsxFileName = \"D:\\\\Data - Kanchan\\\\Github-applications\\\\reactFormGit\\\\src\\\\components\\\\BasicForm.js\";\nimport UserInput from \"../Hooks/user-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  const {\n    value: enteredFirstName,\n    hasError: firstNameInputHaserror,\n    isValid: enteredFirstNameIsValid,\n    valueChangeHandler: firstNameChangeHandler,\n    valueBlurHandler: firstNameBlurHandler,\n    reset: resetFirstNameInput\n  } = UserInput(value => value.trim() !== \"\");\n  const {\n    value: enteredLastName,\n    hasError: lastNameInputHaserror,\n    isValid: enteredLastNameIsValid,\n    valueChangeHandler: lastNameChangeHandler,\n    valueBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput\n  } = UserInput(value => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    hasError: emailInputHaserror,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = UserInput(value => value.includes(\"@\"));\n  let formIsValid = false;\n\n  if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    resetFirstNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  };\n\n  const firstNameInputClasses = firstNameInputHaserror ? \"form-control invalid\" : \"form-control\";\n  const lastNameInputClasses = lastNameInputHaserror ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputHaserror ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), firstNameInputHaserror && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"First name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), lastNameInputHaserror && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"name\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), emailInputHaserror && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter valid Email Id.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["D:/Data - Kanchan/Github-applications/reactFormGit/src/components/BasicForm.js"],"names":["UserInput","BasicForm","props","value","enteredFirstName","hasError","firstNameInputHaserror","isValid","enteredFirstNameIsValid","valueChangeHandler","firstNameChangeHandler","valueBlurHandler","firstNameBlurHandler","reset","resetFirstNameInput","trim","enteredLastName","lastNameInputHaserror","enteredLastNameIsValid","lastNameChangeHandler","lastNameBlurHandler","resetLastNameInput","enteredEmail","emailInputHaserror","enteredEmailIsValid","emailChangeHandler","emailBlurHandler","resetEmailInput","includes","formIsValid","formSubmissionHandler","event","preventDefault","firstNameInputClasses","lastNameInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["import UserInput from \"../Hooks/user-input\";\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredFirstName,\n    hasError: firstNameInputHaserror,\n    isValid: enteredFirstNameIsValid,\n    valueChangeHandler: firstNameChangeHandler,\n    valueBlurHandler: firstNameBlurHandler,\n    reset: resetFirstNameInput,\n  } = UserInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredLastName,\n    hasError: lastNameInputHaserror,\n    isValid: enteredLastNameIsValid,\n    valueChangeHandler: lastNameChangeHandler,\n    valueBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput,\n  } = UserInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredEmail,\n    hasError: emailInputHaserror,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = UserInput((value) => value.includes(\"@\"));\n\n  let formIsValid = false;\n\n  if (\n    enteredFirstNameIsValid &&\n    enteredLastNameIsValid &&\n    enteredEmailIsValid\n  ) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    resetFirstNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  };\n\n  const firstNameInputClasses = firstNameInputHaserror\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const lastNameInputClasses = lastNameInputHaserror\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailInputHaserror\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameInputClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n            value={enteredFirstName}\n          />\n          {firstNameInputHaserror && (\n            <p className=\"error-text\">First name must not be empty.</p>\n          )}\n        </div>\n        <div className={lastNameInputClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n            value={enteredLastName}\n          />\n          {lastNameInputHaserror && (\n            <p className=\"error-text\">Last name must not be empty.</p>\n          )}\n        </div>\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"email\"\n          id=\"name\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHaserror && (\n          <p className=\"error-text\">Please enter valid Email Id.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button type=\"submit\" disabled={!formIsValid}>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}